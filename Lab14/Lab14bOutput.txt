//Kirsty Alexandra Nguegang
//COMP 151
//Lab 14b: Graphs

                                                                                            MinimumSpanningTree Output

How many nodes in your graph?
10
Probability of edge? (type 70 for 70%)
50
***** GENERATED GRAPH *****
     [ 1][ 2][ 3][ 4][ 5][ 6][ 7][ 8][ 9][10]
[ 1]           3   1                       2
[ 2]           4          10
[ 3]   3   4       3   5
[ 4]   1       3       2
[ 5]           5   2       6       1
[ 6]      10           6       9  10
[ 7]                       9
[ 8]                   1  10           8
[ 9]                               8      10
[10]   2                              10

The graph has cycles.


***** MINIMUM SPANNING TREE FOR THE ABOVE GRAPH *****
     [ 1][ 2][ 3][ 4][ 5][ 6][ 7][ 8][ 9][10]
[ 1]           3   1                       2
[ 2]           4
[ 3]   3   4
[ 4]   1               2
[ 5]               2       6       1
[ 6]                   6       9
[ 7]                       9
[ 8]                   1               8
[ 9]                               8
[10]   2

The minimum spanning tree is acyclic.

------------------------------------------------------

How many nodes in your graph?
8
Probability of edge? (type 70 for 70%)
10
***** GENERATED GRAPH *****
     [ 1][ 2][ 3][ 4][ 5][ 6][ 7][ 8]
[ 1]
[ 2]           1
[ 3]       1       3
[ 4]           3
[ 5]
[ 6]
[ 7]
[ 8]
The graph is not connected, the minimum spanning tree will not be calculated

----------------------------------------------------------

How many nodes in your graph?
10
Probability of edge? (type 70 for 70%)
65
***** GENERATED GRAPH *****
     [ 1][ 2][ 3][ 4][ 5][ 6][ 7][ 8][ 9][10]
[ 1]               4  10   8      10   5   8
[ 2]           6       7   5   7   3   6   1
[ 3]       6       8   8   4   7   1  10   3
[ 4]   4       8       1   7   8   8       6
[ 5]  10   7   8   1       8   6   3   6
[ 6]   8   5   4   7   8       1   7   5   8
[ 7]       7   7   8   6   1      10   7   6
[ 8]  10   3   1   8   3   7  10       1   4
[ 9]   5   6  10       6   5   7   1       5
[10]   8   1   3   6       8   6   4   5

The graph has cycles.


***** MINIMUM SPANNING TREE FOR THE ABOVE GRAPH *****
     [ 1][ 2][ 3][ 4][ 5][ 6][ 7][ 8][ 9][10]
[ 1]               4
[ 2]                                       1
[ 3]                       4       1       3
[ 4]   4               1
[ 5]               1               3
[ 6]           4               1
[ 7]                       1
[ 8]           1       3               1
[ 9]                               1
[10]       1   3

The minimum spanning tree is acyclic.

---------------------------------------------------------------

How many nodes in your graph?
10
Probability of edge? (type 70 for 70%)
70
***** GENERATED GRAPH *****
     [ 1][ 2][ 3][ 4][ 5][ 6][ 7][ 8][ 9][10]
[ 1]       4       6   8       8   2   6
[ 2]   4       1   1      10   4   5       2
[ 3]       1       4   6   9  10   9   4   1
[ 4]   6   1   4       3   1   8   8   6   1
[ 5]   8       6   3           3   5   6   3
[ 6]      10   9   1               9   5   8
[ 7]   8   4  10   8   3               9   2
[ 8]   2   5   9   8   5   9           4   3
[ 9]   6       4   6   6   5   9   4       9
[10]       2   1   1   3   8   2   3   9

The graph has cycles.


***** MINIMUM SPANNING TREE FOR THE ABOVE GRAPH *****
     [ 1][ 2][ 3][ 4][ 5][ 6][ 7][ 8][ 9][10]
[ 1]                               2
[ 2]           1   1
[ 3]       1                           4   1
[ 4]       1           3   1
[ 5]               3
[ 6]               1
[ 7]                                       2
[ 8]   2                                   3
[ 9]           4
[10]           1               2   3

The minimum spanning tree is acyclic.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                                                                               HowManyQuestions

Created graph 1:
Vertex 0 has neighbors: 1 2
Vertex 1 has neighbors: 0 2 3
Vertex 2 has neighbors: 0 1 3
Vertex 3 has neighbors: 1 2 4
Vertex 4 has neighbors: 3
==============

Created graph 2:
Vertex 0 has neighbors: 1 2 3
Vertex 1 has neighbors: 0 2 3 4
Vertex 2 has neighbors: 0 1 4
Vertex 3 has neighbors: 0 1 4
Vertex 4 has neighbors: 1 2 3
==============

Created graph 3:
Vertex 0 has neighbors: 1 2 3
Vertex 1 has neighbors: 0 2 3 4
Vertex 2 has neighbors: 0 1 3
Vertex 3 has neighbors: 0 1 2 4
Vertex 4 has neighbors: 1 3
==============

Created graph 4:
Vertex 0 has neighbors: 1 23
Vertex 1 has neighbors: 0 2
Vertex 2 has neighbors: 1 3
Vertex 3 has neighbors: 2 4
Vertex 4 has neighbors: 3 5
Vertex 5 has neighbors: 4 6
Vertex 6 has neighbors: 5 7
Vertex 7 has neighbors: 6 8
Vertex 8 has neighbors: 7 9
Vertex 9 has neighbors: 8 10
Vertex 10 has neighbors: 9 11
Vertex 11 has neighbors: 10 12
Vertex 12 has neighbors: 11 13
Vertex 13 has neighbors: 12 14
Vertex 14 has neighbors: 13 15
Vertex 15 has neighbors: 14 16
Vertex 16 has neighbors: 15 17
Vertex 17 has neighbors: 16 18
Vertex 18 has neighbors: 17 19
Vertex 19 has neighbors: 18 20
Vertex 20 has neighbors: 19 21
Vertex 21 has neighbors: 20 22
Vertex 22 has neighbors: 21 23
Vertex 23 has neighbors: 0 22
==============

Created graph 5:
Vertex 0 has neighbors: 1 10 11
Vertex 1 has neighbors: 0 2 9 10 11
Vertex 2 has neighbors: 1 3 8 9 10
Vertex 3 has neighbors: 2 4 7 8 9
Vertex 4 has neighbors: 3 5 6 7 8
Vertex 5 has neighbors: 4 6 7
Vertex 6 has neighbors: 4 5 7 16 17
Vertex 7 has neighbors: 3 4 5 6 8 15 16 17
Vertex 8 has neighbors: 2 3 4 7 9 15 16 17
Vertex 9 has neighbors: 1 2 3 8 10 13 14 15
Vertex 10 has neighbors: 0 1 2 9 11 12 13 14
Vertex 11 has neighbors: 0 1 10 12 13
Vertex 12 has neighbors: 10 11 13 22 23
Vertex 13 has neighbors: 9 10 11 12 14 21 22 23
Vertex 14 has neighbors: 8 9 10 13 15 20 21 22
Vertex 15 has neighbors: 7 8 9 14 16 19 20 21
Vertex 16 has neighbors: 6 7 8 15 17 18 19 20
Vertex 17 has neighbors: 6 7 16 18 19
Vertex 18 has neighbors: 16 17 19
Vertex 19 has neighbors: 15 16 17 18 20
Vertex 20 has neighbors: 14 15 16 19 21
Vertex 21 has neighbors: 13 14 15 20 22
Vertex 22 has neighbors: 12 13 14 21 23
Vertex 23 has neighbors: 12 13 22
==============

****** Checking if 2 questions are enough ******
   *** Checking graph 1 ***
---> The solution does not exist - not enough choices


   *** Checking graph 2 ***
---> The solution does not exist - not enough choices


   *** Checking graph 3 ***
---> The solution does not exist - not enough choices


   *** Checking graph 4 ***
---> The solution exists with 2 questions:
Student 0 --->  Question 0
Student 1 --->  Question 1
Student 2 --->  Question 0
Student 3 --->  Question 1
Student 4 --->  Question 0
Student 5 --->  Question 1
Student 6 --->  Question 0
Student 7 --->  Question 1
Student 8 --->  Question 0
Student 9 --->  Question 1
Student 10 --->  Question 0
Student 11 --->  Question 1
Student 12 --->  Question 0
Student 13 --->  Question 1
Student 14 --->  Question 0
Student 15 --->  Question 1
Student 16 --->  Question 0
Student 17 --->  Question 1
Student 18 --->  Question 0
Student 19 --->  Question 1
Student 20 --->  Question 0
Student 21 --->  Question 1
Student 22 --->  Question 0
Student 23 --->  Question 1

   *** Checking graph 5 ***
---> The solution does not exist - not enough choices


****** Checking if 3 questions are enough ******
   *** Checking graph 1 ***
---> The solution exists with 3 questions:
Student 0 --->  Question 0
Student 1 --->  Question 1
Student 2 --->  Question 2
Student 3 --->  Question 0
Student 4 --->  Question 1

   *** Checking graph 2 ***
---> The solution exists with 3 questions:
Student 0 --->  Question 0
Student 1 --->  Question 1
Student 2 --->  Question 2
Student 3 --->  Question 2
Student 4 --->  Question 0

   *** Checking graph 3 ***
---> The solution does not exist - not enough choices


   *** Checking graph 5 ***
---> The solution does not exist - not enough choices


****** Checking if 4 questions are enough ******
   *** Checking graph 3 ***
---> The solution exists with 4 questions:
Student 0 --->  Question 0
Student 1 --->  Question 1
Student 2 --->  Question 2
Student 3 --->  Question 3
Student 4 --->  Question 0

   *** Checking graph 5 ***
---> The solution exists with 4 questions:
Student 0 --->  Question 0
Student 1 --->  Question 1
Student 2 --->  Question 0
Student 3 --->  Question 1
Student 4 --->  Question 0
Student 5 --->  Question 1
Student 6 --->  Question 2
Student 7 --->  Question 3
Student 8 --->  Question 2
Student 9 --->  Question 3
Student 10 --->  Question 2
Student 11 --->  Question 3
Student 12 --->  Question 0
Student 13 --->  Question 1
Student 14 --->  Question 0
Student 15 --->  Question 1
Student 16 --->  Question 0
Student 17 --->  Question 1
Student 18 --->  Question 2
Student 19 --->  Question 3
Student 20 --->  Question 2
Student 21 --->  Question 3
Student 22 --->  Question 2
Student 23 --->  Question 3

***** DONE - all graphs were assigned solutions *****
